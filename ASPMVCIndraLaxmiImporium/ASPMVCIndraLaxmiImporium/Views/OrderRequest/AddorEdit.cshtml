@model ASPMVCIndraLaxmiImporium.Models.BillCustomer

@{
    ViewBag.Title = "Dispatch";
}

<style>
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        /*-appearance: none;*/
        margin: 0;
    }
</style>
<section class="content-header">
    <h1>
        Dispatch
        <small>Preview</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="#"><i class="fa fa-shopping-cart"></i> Order Request</a></li>
        <li class="active">Dispatch</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="box">
        <div class="box-header with-border">
            <h3 class="box-title">Dispatch</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                        title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>


        <div class="box-body">
            @using (Html.BeginForm("SaveCustomerDetail", "OrderRequest", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_resetUrl = Url.Action("SaveCustomerDetail", "OrderRequest", new { id = 0 }) })) //data-resetUrl
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.BillCustomerID)

                <div class="row">
                    <div class="col-md-12">
                        <fieldset>
                            <legend>Bill Dispatch</legend>
                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.BillNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.BillNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.BillNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor((model => model.Date), new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CustomerCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.CustomerCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.CustomerCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TransportCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.TransportCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.TransportCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CBM, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.CBM, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CBM, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>

                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Customer Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("CustomerName", Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "form-control CustomerName" })
                                            @*@Html.ValidationMessageFor(model => model.CustomerCode, "", new { @class = "text-danger" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </fieldset>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div id="dataTable"></div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Bill Payable", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="row_dim">
                    @Html.Label("Due", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Editor("CreditAmount", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="totalAmount">
                    @Html.LabelFor(model=>model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Editor("TotalAmount", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" id="DispatchSave" class="btn btn-success" style="float: right; margin-right: 50px;" />
                    </div>
                </div>

                


            </div>
            }

        </div>
        <!-- /.box-body -->
    </div>
    <!-- /.box -->
</section>
<!-- /.content -->

<script>
    $(function () {
        GetDropDown('Creditor', '/OrderRequest/GetCustomer/', 'CustomerName')

    });

    //For data displaying in table
    $(document).ready(function(){
        $.ajax({
            type: "get",
            url: '/Bill/ViewAll',
            data: { id: $("#BillNumber").val() },
            success: function (data) {
                $("#dataTable").html(data).show();
                
                
            }
        });
    });

    //on selecting customer Name
    $(document).ready(function() {
        $('#row_dim').hide();
        $('#totalAmount').hide();
        
        $('#CustomerName').change(function () {
            $.ajax({
                type: "GET",
                url: '/OrderRequest/GetCreditAmount',
                data: { id: $(this).val() },
                success: function (data) {

                    $('#row_dim').show();
                    $("#CreditAmount").val(data);
                    $("#TotalAmount").val(data + parseInt($("#Total").val()));
                    $('#totalAmount').show();
                }
            });
            //if($('#CustomerName').val() == '') {
            //    $('#row_dim').show(); 
            //} else {
            //    $('#row_dim').hide(); 
            //} 

        
            //if($('#CustomerName').val() == 'parcel') {
            //    $('#row_dim').show(); 
            //} else {
            //    $('#row_dim').hide(); 
           // } 
        });
    });

    //For table data change save
 $('#dataTable').on('keypress','.item_Pair', function (e) {
   
        if (e.which == 13) {
    var rowdata=$(this).closest('tr');
            var model = {
                BillID: parseInt(rowdata.find("td:eq(6)").text()),
                BillNumber: parseInt($('#BillNumber').val()),
                SN: null,
                DebtorID: parseInt($('#CustomerCode').val()),
                TransportID: parseInt($('#TransportCode').val()),
                CredtorID: parseInt($('.CustomerName').val()),
                ProductID: parseInt(rowdata.find("td:eq(0)").text()),
                Orderded: parseInt(rowdata.find("td:eq(1)").text()),
                Pair: parseInt($(this).val()),
                TotalPair: parseInt(rowdata.find("td:eq(1)").text() * $(this).val()),
                Rate: parseFloat(rowdata.find("td:eq(4)").text()),
                TotalAmount: parseFloat(rowdata.find("td:eq(1)").text() * $(this).val() * rowdata.find("td:eq(4)").text()),
                IsCommit: true,
                Ispaid: false,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            };
            console.log(model)
            
            var ajaxConfig = {
                type: 'POST',
                url: '/OrderRequest/AddorEdit',
                data: model, success: function (response) {
                    alert("Record successfully updated");

                    $.ajax({
                        type: "get",
                        url: '/Bill/ViewAll',
                        data: { id: $("#BillNumber").val() },
                        success: function (data) {
                            $("#dataTable").html(data).show();
                          
                        var total= 0;
                        $(".item_TotalAmount").each(function () {
                 
                        total += parseFloat($(this).text());   
                    });
                    $("#Total").val(total);
                       
                }

                 });
                }
            }
            $.ajax(ajaxConfig);
    e.preventDefault();
        }
    });


</script>